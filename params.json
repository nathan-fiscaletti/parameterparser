{
  "name": "Parameter Parser",
  "tagline": "An advanced parameter parser for PHP",
  "body": "> **Parameter Parser** is a simple library used to parse intricate parameters from an array of strings.\r\n\r\n[![StyleCI](https://styleci.io/repos/73029011/shield?style=flat)](https://styleci.io/repos/73029011)\r\n[![Latest Stable Version](https://poser.pugx.org/nafisc/parameterparser/v/stable?format=flat)](https://packagist.org/packages/nafisc/parameterparser)\r\n[![Total Downloads](https://poser.pugx.org/nafisc/parameterparser/downloads?format=flat)](https://packagist.org/packages/nafisc/parameterparser)\r\n[![Latest Unstable Version](https://poser.pugx.org/nafisc/parameterparser/v/unstable?format=flat)](https://packagist.org/packages/nafisc/parameterparser)\r\n[![License](https://poser.pugx.org/nafisc/parameterparser/license?format=flat)](https://packagist.org/packages/nafisc/parameterparser)\r\n\r\n[Advanced Code Examples](https://github.com/nathan-fiscaletti/parameterparser/blob/master/examples/Example1.md)\r\n\r\n### Features\r\n* Parse command line parameters.\r\n* Assign aliases to parameters.\r\n* Custom closures for each command line parameter.\r\n* Customize the way the command line is parsed.\r\n\r\n### Example Usage\r\n```php\r\n// Initialize a new ParameterCluster\r\n$parameters = new ParameterCluster();\r\n\r\n// Add a ParameterClosure to the ParameterCluster\r\n$parameters->add(parameter('-', 'name', function ($name) {\r\n    return $name;\r\n}, true));\r\n\r\n// Create a new parameter parser using the ParameterCluster\r\n$parameterParser = new ParameterParser($argv, $parameters);\r\n\r\n// Parse the parameters using the ParameterParser.\r\n$results = $parameterParser->parse();\r\n\r\n// Verify that the parameters were valid after parsing.\r\nif (! $parameterParser->isValid()) {\r\n\r\n    // Since it was not valid, output usage.\r\n    echo $parameters->getFullUsage() . PHP_EOL;\r\n\r\n} else {\r\n\r\n    // Retrieve the name from the results\r\n    $name = $results['name'];\r\n\r\n    // Output the name\r\n    echo 'Your name is ' . $name . PHP_EOL;\r\n\r\n}\r\n```\r\n\r\n### Output\r\n```\r\n~/ php test.php -name 'Nathan Fiscaletti'\r\n\r\n   Your name is Nathan Fiscaletti\r\n```",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}